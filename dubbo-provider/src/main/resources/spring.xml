<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://code.alibabatech.com/schema/dubbo
                        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<context:property-placeholder location="classpath*:dubbo.properties"
		ignore-unresolvable="true" />
	<!-- 提供方应用信息，用于计算依赖关系 -->
	<dubbo:application name="hello-sayDubbo-app" />

	<!-- 使用multicast广播注册中心暴露服务地址 -->
	<!-- <dubbo:registry address="multicast://224.5.6.7:1234" /> -->
	<!-- 使用zookeeper注册中心暴露服务地址，如果不写protocol的话，可以在address的最前面加上协议再加地址如：address="zookeeper://192.168.0.37:2181" -->
	<dubbo:registry protocol="zookeeper" address="${dubbo.registry.address}" />

	<!-- 用dubbo协议在20880端口暴露服务 -->
	<dubbo:protocol name="dubbo" port="20880" />

	<!-- 声明需要暴露的服务接口 -->
	<!-- 和本地bean一样实现服务 -->
	<bean id="demoService" class="com.dubbo.provider.service.impl.RemoteServiceImpl" />
	<!--  delay表示延迟到Spring初始化完成后，再暴露服务-->
	<dubbo:service interface="com.dubbo.provider.service.RemoteService"
		ref="demoService" delay="-1" />

	<!-- 测试客户端不需要服务端接口api的调用 -->
	<bean id="generaticService"
		class="com.dubbo.provider.service.impl.RemoteGeneraticServiceImpl" />
	<dubbo:service interface="com.dubbo.provider.service.RemoteGeneraticService"
		ref="generaticService" delay="-1" />
		
		<!--  测试参数回调  如果callback为true，服务提供方将生成反向代理，可以从服务提供方反向调用消费方，通常用于事件推送-->
	<bean id="callbackService" class="com.dubbo.provider.service.impl.CallbackServiceImpl" />
	<dubbo:service interface="com.dubbo.provider.service.CallbackService"
		ref="callbackService" connections="1" callbacks="1000" delay="-1">
		<dubbo:method name="addListener">
			<dubbo:argument index="1" callback="true" />
			<!--也可以通过指定参数类型的方式 -->
			<!--<dubbo:argument type="com.demo.CallbackListener" callback="true" /> -->
		</dubbo:method>
	</dubbo:service>
	<bean id="nofify" class="com.dubbo.provider.service.impl.NofifyServiceImpl"/>
	<dubbo:service interface="com.dubbo.provider.service.NofifyService" ref="nofify" version="1.0.0" group="cn"></dubbo:service>
    <!--  注解方式暴露服务	-->
    <dubbo:annotation package="com.dubbo.provider.service" />
</beans>